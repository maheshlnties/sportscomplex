@model SportsComplex.Application.ViewModels.NewsViewModel
@{
    ViewBag.Title = "AddNews";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="container" style="margin-top: 10px">
    @using (Html.BeginForm("AddNews", "Admin", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Add Sports News</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Content, htmlAttributes: new {@class = "control-label col-md-4"})
                <div class="col-md-4">
                    @Html.TextAreaFor(model => model.Content, new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.Content, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Highlight, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-4">
                    @Html.CheckBoxFor(model => model.Highlight, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Highlight, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PostedOn, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.PostedOn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PostedOn, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ExpiresOn, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.ExpiresOn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ExpiresOn, "", new { @class = "text-danger" })
                </div>
            </div>

            @if (!string.IsNullOrEmpty(@ViewBag.Message))
            {
                <br />
                <div class="col-md-10 text-danger">
                    @ViewBag.Message
                </div>
                <br />
            }

            <div class="form-group">
                <div class="col-md-10 text-center">
                    <input type="submit" value="Post News" class="btn btn-success" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to Manage News", "ManageNews")
    </div>
</div>
