@using SportsComplex.Application.Helper
@using SportsComplex.Models
@model SportsComplex.Application.ViewModels.GymViewModel
@{
    var principal = (CustomPrincipal)HttpContext.Current.User;
    switch (principal.Role)
    {
        case UserRoles.Employee:
            Layout = "~/Views/Shared/_EmployeeLayout.cshtml";
            break;
        case UserRoles.Admin:
            Layout = "~/Views/Shared/_AdminLayout.cshtml";
            break;
    }
}

@section scripts
{
    <link href="~/Content/largeButton.css" rel="stylesheet"/>

    <script type="text/javascript">
        $(document).ready(function () {

            $("#okImage").hide();
            $("#cancelImage").hide();


            $("#employeeSelected").change(function () {
                $("#okImage").hide();
                $("#cancelImage").hide();
            });


            $('#btnJoin').click(function(event) {
                event.preventDefault();
                if (confirm("Are you sure you want to JOIN GYM?")) {
                    $.ajax({
                        type: "POST",
                        url: '/Module/Gym',
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify({ "psNumber": $("#employeeSelected").val() }),
                        success: function(data) {
                            window.location.reload(true);
                        },
                        error: function(data) {
                            if (data != null) {
                                alert(data.statusText);
                            }
                            else {
                                alert("Some problem occured on updating data");
                            }
                        }
                    });
                }
            });

            $('#btnLeave').click(function(event) {
                event.preventDefault();
                if (confirm("Are you sure you want to LEAVE GYM?")) {
                    var value = $('#hiddenValue').val();
                    $.ajax({
                        type: "PUT",
                        url: '/Module/Gym',
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify({ "id": value }),
                        success: function(data) {
                            window.location.reload(true);
                        },
                        error: function(data) {
                            if (data != null) {
                                alert(data.statusText);
                            }
                            else {
                                alert("Some problem occured on updating data");
                            }
                        }
                    });
                }
            });


            $("#selectEmp").click(function (event) {
                event.preventDefault();
                var resource = {
                    psNumber: $("#employeeSelected").val()
                };
                $.ajax({
                    type: "POST",
                    url: '/Module/SelectEmployee',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(resource),
                    success: function (data) {
                        if (data === true) {
                            $("#okImage").show();
                            $("#cancelImage").hide();
                        } else {
                            $("#okImage").hide();
                            $("#cancelImage").show();
                        }
                    },
                    error: function (data) {
                        $("#cancelImage").show();
                        $("#okImage").hide();
                        if (data != null) {
                            alert("Some problem occured while selecting employee :" + data.statusText);
                        } else {
                            alert("Some problem occured while selecting employee");
                        }
                    }
                });
            });
        });
    </script>
}


<div class="container" style="margin-left: 100px; min-height: 350px">
    <div class="row" style="margin-top: 20px; font-weight: bold">
        Gym Membership
    </div>
    <br />
    @if (Model.Joined)
    {
        <text>
            <p>
                Your gym membership is active <a id="btnLeave" href="" style="font-weight: bold; text-decoration: underline; cursor: pointer">Leave</a>
            </p>
        </text>
    }
    else
    {
        <text>
            <p >
                You do not have gym membership <a id="btnJoin" href="" style="font-weight: bold; text-decoration: underline; cursor: pointer">Join</a>
            </p>
        </text>
    }
    <input type="hidden" id="hiddenValue" value="@Model.Id">
    @if (principal.Role == UserRoles.Admin)
    {
        <br/>
        <div class="panel panel-default" style="float: left;">
            <div class="panel-heading">
                <b>Enroll/Cancel other Employee for Gym</b>
            </div>
            <div class="panel-body">
                <div class="form-group" style="margin-top: 10px">
                    @Html.LabelFor(model => model.PsNumber, new {@class = "col-md-4"})
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.PsNumber, new { htmlAttributes = new { @class = "form-control", @id = "employeeSelected" } })
                        @Html.ValidationMessageFor(model => model.PsNumber, "", new {@class = "text-danger"})
                    </div>
                    <img id="okImage" src="~/Images/ok.ico" style="width: 20px; height: 20px;" />
                    <img id="cancelImage" src="~/Images/cancel.ico" style="width: 20px; height: 20px;" />
                </div>

                <div class="form-group">
                    <div class="col-md-offset-4 col-md-10" style="margin-top: 10px">
                        <button type="button" id="selectEmp" class="btn btn-primary">Select Employee</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>